#!/usr/bin/env python3
#
# Copyright (c) 2023 InfluxData
# Author: Jamie Strandboge <jamie@influxdata.com>
#
# Permission is hereby granted, free of charge, to any
# person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the
# Software without restriction, including without
# limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software
# is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice
# shall be included in all copies or substantial portions
# of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF
# ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
# TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT
# SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
# IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

import argparse
import sys

from cvelib.cve import checkSyntax
from cvelib.common import (
    getConfigCveDataPaths,
    getConfigCompatUbuntu,
)


def main():
    parser: argparse.ArgumentParser = argparse.ArgumentParser(
        prog="cve-check-syntax",
        description="Verify syntax of CVEs",
    )

    parser.add_argument(
        "--untriaged-ok",
        dest="untriagedOk",
        help="'priority' can be 'untriaged'",
        action="store_true",
    )

    parser.add_argument(
        "-f",
        dest="fns",
        help="CVE file(s) to check",
        metavar="FILENAME1 FILENAME2... FILENAMEN",
        nargs="+",
    )

    args: argparse.Namespace = parser.parse_args()

    ok: bool
    if args.fns:
        ok = checkSyntax(
            getConfigCveDataPaths(),
            getConfigCompatUbuntu(),
            args.untriagedOk,
            cveFiles=args.fns,
        )
    else:
        ok = checkSyntax(
            getConfigCveDataPaths(), getConfigCompatUbuntu(), args.untriagedOk
        )

    if not ok:
        sys.exit(1)


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("Aborted.")
        sys.exit(1)
