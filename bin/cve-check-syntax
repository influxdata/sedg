#!/usr/bin/env python3

import configparser
import glob
import os
import shutil
import sys
import tempfile

import cvelib.cve

configFilePath = os.path.expandvars("$HOME/.config/influx-security-tools.conf")


# XXX move this to a library
def readConfig():
    """Read configuration for the tools"""
    config = configparser.ConfigParser()
    if os.path.exists(configFilePath):
        config.read(configFilePath)
    else:
        config["Locations"] = {
            "cve-data": "/set/to/path/for/influx-security-tools-cve-data",
        }
        orig = os.umask(0o027)
        with tempfile.NamedTemporaryFile(mode="w", delete=False) as f:
            config.write(f)
            f.flush()
            shutil.copyfile(f.name, configFilePath, follow_symlinks=False)
            os.umask(orig)
        cvelib.cve.msg("Created default config in %s" % configFilePath)

    return config


def getConfigPath():
    config = readConfig()
    if "Locations" in config and "cve-data" in config["Locations"]:
        path = config["Locations"]["cve-data"]
        if not os.path.isdir(path):
            cvelib.cve.error(
                "Please configure %s to\nset 'cve-data' in "
                "'[Locations]' to a valid path" % configFilePath
            )

        return config["Locations"]["cve-data"]


def main():
    path = getConfigPath()

    # TODO: make configurable
    active = os.path.join(path, "active")
    retired = os.path.join(path, "retired")
    ignored = os.path.join(path, "ignored")
    for f in (
        glob.glob(active + "/CVE*")
        + glob.glob(retired + "/CVE-*")
        + glob.glob(ignored + "/CVE-*")
    ):
        try:
            cvelib.cve.CVE(fn=f)
        except Exception as e:
            cvelib.cve.warn("%s: %s" % (f, str(e)))


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("Aborted.")
        sys.exit(1)
