#!/bin/bash
#
# Copyright (c) 2023 InfluxData
# Author: Jamie Strandboge <jamie@influxdata.com>
#
# Permission is hereby granted, free of charge, to any
# person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the
# Software without restriction, including without
# limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software
# is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice
# shall be included in all copies or substantial portions
# of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF
# ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
# TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT
# SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
# IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
set -e

# HELPERS

help() {
    cat <<EOM
Usage: cve-nfu [-e FILENAME] CVE-YYYY-NNNN: Project Name
Usage: cve-nfu [-e FILENAME] -p PROJECT CVE-YYYY-NNN1 CVE-YYYY-NNN2

  -f FILENAME   file containing NFUs (default: ./ignored/not-for-us.txt)
  -C FILENAME   file containing CVEs (optional). File may contain space,
                newline or comma-separated CVEs
  -e FILENAME   file containing known embedded projects. File contains a list
                of projects, one per line with empty lines and lines starting
                with '#' skipped
  -p PROJECT    project name to use when specifying a list of CVEs

Eg:

  $ cve-nfu CVE-2022-26336: Apache POI
  $ cve-nfu -e ./embedded CVE-2021-44521: Apache Cassandra
  $ cve-nfu -p "Apache Tiki" CVE-2022-25169 CVE-2022-30126 CVE-2022-33879

  From a file, 'foo':
  $ cat ./foo
  CVE-2022-25169, CVE-2022-30126
  CVE-2022-33879
  $ cve-nfp -p "Foo" -C ./foo
EOM
}

add_nfu() {
    local cve="$1"
    local proj="$2"

    cve=$(echo "$cve" | grep -E '^CVE-[0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]+')
    if [ -z "$cve" ]; then
        echo "Malformed input. Should be 'CVE-YYYY-NNNN'" >&2
        exit 1
    elif grep -Eq "^$cve:" "$nfu" ; then
        bn=$(basename "$nfu")
        echo "Skipping already existing $cve in 'ignored/$bn'" >&2
    elif [ -e "./active/$cve" ]; then
        echo "Skipping already existing $cve in 'active/$cve'" >&2
    elif [ -e "./retired/$cve" ]; then
        echo "Skipping already existing $cve in 'retired/$cve'" >&2
    elif [ -e "./ignored/$cve" ]; then
        echo "Skipping already existing $cve in 'ignored/$cve'" >&2
    elif [ -n "$emb" ] && grep -Eiq "(^| )$proj( |$)" "$emb" ; then
        # starts with, contains or endswith full work ('$proj')
        echo "Skipping '$proj' which is listed in $emb" >&2
    else
        echo "$cve: $proj" >> "$nfu"
    fi
}

# START

nfu="./ignored/not-for-us.txt"
emb=
proj=
cvef=

while getopts "he:f:p:C:" opt
do
    case "$opt" in
        e) emb="$OPTARG";;
        f) nfu="$OPTARG";;
        p) proj="$OPTARG";;
        C) cvef="$OPTARG";;
        h) help ; exit 0;;
        ?) help;;
    esac
done
shift $((OPTIND - 1))

if [ ! -e "$nfu" ]; then
    echo "'$nfu' does not exist" >&2
fi

if [ -n "$emb" ] && [ ! -e "$emb" ]; then
    echo "'$emb' does not exist" >&2
fi

if [ -z "$proj" ]; then
    # CVE-YYYY-NNN1: Foo
    proj=$(echo "$*" | cut -d ' ' -f 2-)
    cve=$(echo "$*" | grep -E '^CVE-.*+: ' | cut -d ':' -f 1)
    if [ -z "$cve" ]; then
        echo "Malformed input. Should be 'CVE-YYYY-NNNN: ...'" >&2
        exit 1
    fi
    add_nfu "$cve" "$proj"
else
    cves=
    if [ -n "$cvef" ]; then
        if [ ! -e "$cvef" ]; then
            echo "'$cvef' does not exist" >&2
            exit 1
        fi
        # cve-nfu -p foo -C $cvef
        readarray -t cves < <(sed -e 's/,//g' "$cvef" | tr ' ' '\n' | grep '^CVE' | sort -u)
    else
        # cve-nfu -p foo CVE-2018-12648, CVE-2021-36045, CVE-2021-36046
        cves=("$@")
    fi

    for cve in "${cves[@]}" ; do
        add_nfu "${cve//,/}" "$proj"
    done
fi
