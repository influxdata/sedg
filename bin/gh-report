#!/usr/bin/env python3

import argparse
import sys
import textwrap

from cvelib.common import error

from cvelib.report import getReposReport


def main():
    parser: argparse.ArgumentParser = argparse.ArgumentParser(
        prog="gh-report",
        description="Generate reports on GitHub repos",
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog=textwrap.dedent(
            """\
Example usage:

# Show active GitHub repos for a given org
$ gh-report --output-repos --gh-org=foo

# Show archived GitHub repos for a given org
$ gh-report --output-archived-repos --gh-org=foo
        """
        ),
    )
    parser.add_argument(
        "--output-repos",
        dest="output_repos",
        help="output active GitHub repos for a given org",
        action="store_true",
    )
    parser.add_argument(
        "--output-archived-repos",
        dest="output_archived_repos",
        help="output archived GitHub repos for a given org",
        action="store_true",
    )
    parser.add_argument(
        "--gh-org",
        dest="gh_org",
        type=str,
        help="GitHub org",
        default=None,
    )
    args: argparse.Namespace = parser.parse_args()

    if args.gh_org is None:
        error("Please specify --gh-org")
    if not args.output_repos and not args.output_archived_repos:
        error("Please specify one of --output-repos or --output-archived-repos")

    # send to a report
    if args.output_repos:
        getReposReport(args.gh_org, archived=False)
    elif args.output_archived_repos:
        getReposReport(args.gh_org, archived=True)


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("Aborted.")
        sys.exit(1)
